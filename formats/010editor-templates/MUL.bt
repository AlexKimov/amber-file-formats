//------------------------------------------------
//--- 010 Editor v8.0.1 Binary Template
//
//      File: 
//   Authors: 
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------

CHAR Magic[20];
CHAR Filename[300];

local const uint FILE_NUMBER = 130;
local uint i;

UINT Unknown;
UINT Unknown;
UINT Offset1;
UINT Offset2;
UINT B;
UINT Unknown;

struct {
  CHAR Filename[20];  
  UINT Unknown;
  UINT Unknown;
  UINT Unknown;
  UINT Size;
  UINT OffsetEnd;
  UINT Offset;
  UINT Unknown;
  UINT Unknown;
} FILE_REC[FILE_NUMBER];

typedef struct (uint size, char name[20]) {
  local string filename = name;
  BYTE Data[size];
} FILE <name=getName>;

for (i = 0; i < FILE_NUMBER; ++i) {
  FSeek(FILE_REC[i].Offset);
  FILE File(FILE_REC[i].Size, FILE_REC[i].Filename);
};

string getName(FILE &file){
  return file.filename;
}
